
import React from "react"
  
  // const onClickNode = function(nodeId: any) {
  //   window.alert(`Clicked node ${nodeId}`);
  // };
  
  // const onClickLink = function(source: any, target: any) {
  //   window.alert(`Clicked link between ${source} and ${target}`);
  // };

export default class AllCVE extends React.Component<any, any> {
  constructor(props: any) {
    super(props);
    this.state = {
      error: null,
      isLoaded: false,
      data: {
        nodes: [],
        links: []
     }
    };
  }
  
  componentDidMount() {
    fetch(`https://t0stjoqn32.execute-api.us-east-1.amazonaws.com/Prod/neo4j?firstname=${this.props.firstname}&tree=true`)
    // fetch(`http://localhost:3000/neo4j?firstname=John&tree=true`)
    .then(res => res.json())
    .then(
      (result) => {
        const nodeList:any = []
        const linkList:any = []
        const inputData = {
          nodes: nodeList,
          links: linkList
        }
        result.forEach((items:any) => {
          items.forEach((item:any) => {
            linkList.push({source: item[0], target: item[1]})
            item.forEach((data:any) => {
              if (!nodeList.find((o:any) => o.id === data)) nodeList.push({id: data})
            })
          })
        })
        console.log(inputData)

        this.setState({
          isLoaded: true,
          data: inputData
        });
      },
      // Note: it's important to handle errors here
      // instead of a catch() block so that we don't swallow
      // exceptions from actual bugs in components.
      (error) => {
        this.setState({
          isLoaded: true,
          error
        });
      }
    )
  }

  render() {
    const { error, isLoaded, data } = this.state;
    return (
      <div className="App">

      </div>
    )
  }
}

